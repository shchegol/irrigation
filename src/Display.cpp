#include "Arduino.h"
#include "U8glib.h"
#include "Display.h"

template<typename T>
Print &operator<<(Print &s, T n) {
    s.print(n);
    return s;
};

U8GLIB_SH1106_128X64 u8g(U8G_I2C_OPT_DEV_0 | U8G_I2C_OPT_FAST);

// blob state icons
static unsigned char blobs[][32] = {
        {0x20, 0x00, 0x50, 0x00, 0x50, 0x00, 0x88, 0x00, 0x88, 0x00, 0x04, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x04, 0x01, 0x04, 0x01, 0x04, 0x02, 0x02, 0x02, 0x02, 0x8C, 0x01, 0x70, 0x00}, // 0
        {0x20, 0x00, 0x50, 0x00, 0x50, 0x00, 0x88, 0x00, 0x88, 0x00, 0x04, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x04, 0x01, 0x04, 0x01, 0x04, 0xFE, 0x03, 0xFE, 0x03, 0xFC, 0x01, 0x70, 0x00}, // 25
        {0x20, 0x00, 0x50, 0x00, 0x50, 0x00, 0x88, 0x00, 0x88, 0x00, 0x04, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0xFF, 0x07, 0xFF, 0x07, 0xFF, 0x07, 0xFE, 0x03, 0xFE, 0x03, 0xFC, 0x01, 0x70, 0x00}, // 50
        {0x20, 0x00, 0x50, 0x00, 0x50, 0x00, 0x88, 0x00, 0x88, 0x00, 0x04, 0x01, 0xFC, 0x01, 0xFE, 0x03, 0xFE, 0x03, 0xFF, 0x07, 0xFF, 0x07, 0xFF, 0x07, 0xFE, 0x03, 0xFE, 0x03, 0xFC, 0x01, 0x70, 0x00}, // 75
        {0x20, 0x00, 0x70, 0x00, 0x70, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xFC, 0x01, 0xFC, 0x01, 0xFE, 0x03, 0xFE, 0x03, 0xFF, 0x07, 0xFF, 0x07, 0xFF, 0x07, 0xFE, 0x03, 0xFE, 0x03, 0xFC, 0x01, 0x70, 0x00}  // 100
};

void Display::setPin(int pin) {
    if (pin >= 0 && pin <= 5) {
        _pin = pin;
        pinMode(_pin, OUTPUT);
    }
}

void Display::setSensor(int position, int value) {
    _sensors[position] = value;
}

void Display::setTime(int hour, int minute) {
    _time[0] = hour;
    _time[1] = minute;
}

void Display::draw() {
    u8g.firstPage();
    do {
        int fromLeft = 4;

        Display::prepare();

        for (int i = 0; i < 4; i++) {
            if (_sensors[i] != -1) {
                Display::drawSensor(i, _sensors[i], fromLeft);
            }
            fromLeft += 35;
        }

        Display::drawTime();
    } while (u8g.nextPage());
}

void Display::drawSensor(int sensorName, int value, int fromLeft) {
    int blobNum = map(value, 0, 100, 0, 4);

    u8g.setPrintPos(fromLeft, 0);
    u8g << "A" << sensorName;
    u8g.drawXBM(fromLeft, 16, 11, 16, blobs[blobNum]);
    u8g.setPrintPos(fromLeft - 1, 36);
    u8g << value << "%";
}

void Display::drawTime() {
    u8g.setPrintPos(0, 54);
    u8g << "last time: " << _time[0] << ":" << _time[1];
}

void Display::prepare() {
    u8g.setFont(u8g_font_6x10);
    u8g.setFontRefHeightExtendedText();
    u8g.setDefaultForegroundColor();
    u8g.setFontPosTop();
}
